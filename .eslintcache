[{"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\index.js":"1","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\App.js":"2","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\reportWebVitals.js":"3","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Events\\Events.js":"4","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Clubs\\Clubs.js":"5","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Login\\Login.js":"6","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Utils\\Utils.js":"7","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Utils\\eraseCookie.js":"8","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Utils\\getCookieByName.js":"9","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Utils\\setCookie.js":"10","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Common\\Navbar\\Navbar.js":"11","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Login\\Login1.js":"12","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Coaches\\Coaches.js":"13","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Athletes\\Athletes.js":"14","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Coaches\\TableCoaches.js":"15","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Common\\OpenForm\\FormCreateEdit.js":"16","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Common\\OpenForm\\FormDelete.js":"17","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Common\\Pagination\\Pagination.js":"18","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Common\\OpenForm\\FormConfirmAdd.js":"19","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Events\\EventElements.js":"20","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Common\\Pagination\\tst.js":"21"},{"size":592,"mtime":1609930525000,"results":"22","hashOfConfig":"23"},{"size":1001,"mtime":1611649147393,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1609851305000,"results":"25","hashOfConfig":"23"},{"size":3225,"mtime":1612874572455,"results":"26","hashOfConfig":"23"},{"size":182,"mtime":1611649147405,"results":"27","hashOfConfig":"23"},{"size":3060,"mtime":1612857163364,"results":"28","hashOfConfig":"23"},{"size":218,"mtime":1609926306000,"results":"29","hashOfConfig":"23"},{"size":95,"mtime":1609926285000,"results":"30","hashOfConfig":"23"},{"size":198,"mtime":1609925646000,"results":"31","hashOfConfig":"23"},{"size":314,"mtime":1609926548000,"results":"32","hashOfConfig":"23"},{"size":1180,"mtime":1612856871288,"results":"33","hashOfConfig":"23"},{"size":3533,"mtime":1610373762432,"results":"34","hashOfConfig":"23"},{"size":432,"mtime":1611649147406,"results":"35","hashOfConfig":"23"},{"size":190,"mtime":1610536577891,"results":"36","hashOfConfig":"23"},{"size":11511,"mtime":1612860479669,"results":"37","hashOfConfig":"23"},{"size":3890,"mtime":1612182467322,"results":"38","hashOfConfig":"23"},{"size":321,"mtime":1611753813630,"results":"39","hashOfConfig":"23"},{"size":697,"mtime":1612800044908,"results":"40","hashOfConfig":"23"},{"size":213,"mtime":1611816107111,"results":"41","hashOfConfig":"23"},{"size":907,"mtime":1612193594364,"results":"42","hashOfConfig":"23"},{"size":3488,"mtime":1612793096416,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"6xe1c4",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\index.js",[],["92","93"],"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\App.js",["94"],"import './App.css';\r\n\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\n//import { Login } from './Components/Login/Login';\r\nimport { Login } from './Components/Login/Login';\r\nimport { Coaches } from './Components/Coaches/Coaches';\r\nimport { Events } from './Components/Events/Events';\r\nimport { Clubs } from './Components/Clubs/Clubs';\r\nimport { Athletes } from './Components/Athletes/Athletes';\r\n\r\n\r\nfunction App() {\r\n  const isLoggedIn = localStorage.getItem('isLoggedIn') == 'true';\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!isLoggedIn && <Redirect to=\"/login\" />}\r\n\r\n      <Switch>\r\n        <Route path=\"/\" component={Login} exact />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/coaches\" component={Coaches} />\r\n        <Route path=\"/events\" component={Events} />\r\n        <Route path=\"/clubs\" component={Clubs} />\r\n        <Route path=\"/athletes\" component={Athletes} />\r\n      </Switch> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\reportWebVitals.js",[],"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Events\\Events.js",["95","96"],"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Clubs\\Clubs.js",[],"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Login\\Login.js",["97","98","99"],"import axios from 'axios';\nimport { useState } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Row, Col, Button, Form, Alert } from 'react-bootstrap';\nimport { Utils } from '../../Utils/Utils';\nimport './Login.css';\n\nexport const Login = () => {\n  const isLoggedIn = localStorage.getItem('isLoggedIn') == 'true';\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginError, setLoginError] = useState('');\n  const handleLogin = (e) => {\n    e.preventDefault();\n    setLoginError('');\n\n    axios.get('http://localhost:3000/user', {\n      params: {\n        email,\n        password,\n      }\n    })\n      .then(response => {\n        \n        const { data } = response;\n        console.log(response.length);\n        if (data.length && data[0].isAdmin===true) {\n          const loginData = {\n            name: data[0].name,\n            value: data[0].email,\n            daysUntilExpire: 1,\n          };\n          \n          Utils.eraseCookie('username');\n          Utils.setCookie({ ...loginData });\n          localStorage.setItem('isLoggedIn', true);\n          localStorage.setItem('username',loginData.name);\n          window.location.href = \"/coaches\";\n        } else {\n          setLoginError('Email and/or password incorrect');\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  return (\n    <div id=\"content-page\">\n      {isLoggedIn && <Redirect to=\"/coaches\" />}\n\n      <div className=\"contentLog\">\n        <div className=\"elementsLogin\">\n          <div id=\"logMsg\">\n            <p id=\"p1\">Welcome</p>\n            <h2 id=\"p2\">Login to your account</h2>\n          </div>\n\n\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label id=\"lbl\">Email address</Form.Label>\n              <Form.Control onChange={(e) => { setEmail(e.target.value) }} type=\"email\" placeholder=\"Enter email\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label id=\"lbl\">Password</Form.Label>\n              <Form.Control onChange={(e) => { setPassword(e.target.value) }} type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n            <Button id=\"btnSubmit\" onClick={(e) => { handleLogin(e) }} variant=\"primary\" type=\"submit\">\n              LOGIN\n            </Button>\n\n            {loginError && <Alert variant={'danger'}>\n              {loginError}\n            </Alert>}\n          </Form>\n        </div>\n      </div>\n      <img alt=\"hero-img\" id=\"hero-img\" src=\"https://s3-alpha-sig.figma.com/img/227e/6c2b/11b38a8515a366f8cd54d8473ae1736e?Expires=1610928000&Signature=LzbQ7xLZ44KEqZx683rzPHs5ukskqVAoyCdpYOIEK~olaTEcEu9yyvI5zK1Ja1adKcV3huSgZf9ZB-GtzeiTSgDlspfGAZFiFfQnKeJYxcHOfo9SOOpld3jVDxK3PGZwX7Fu-PNhoQCuhGyQhFMlYIS8uw2n7rdBVHt0ipvqnj9L56Pfs76QbZrBWZw62qLECkbrDZ3P98dJ3W8suhD8XIIqFJPUGjhI56Ftn6KjDN7pvwNtOqkMP-x09AUboqXESbTles2~AeCWDOJS5tNbj0BRssR6ZyrbLH3wn~6PFxCY9yKp1QuW8e8SNmxFG-nIbRltRuWdqTWAG8j7DBpg2w__&Key-Pair-Id=APKAINTVSUGEWH5XD5UA\" />\n    </div>\n\n  )\n}","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Utils\\Utils.js",[],"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Utils\\eraseCookie.js",[],"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Utils\\getCookieByName.js",[],"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Utils\\setCookie.js",[],"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Common\\Navbar\\Navbar.js",[],"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Login\\Login1.js",["100"],"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Coaches\\Coaches.js",[],"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Athletes\\Athletes.js",[],"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Coaches\\TableCoaches.js",["101","102","103","104"],"import React, { Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport './TableCoaches.css';\r\nimport { FormCreateEdit } from '../Common/OpenForm/FormCreateEdit';\r\nimport { FormDelete } from '../Common/OpenForm/FormDelete';\r\nimport { FormConfirmAdd } from '../Common/OpenForm/FormConfirmAdd';\r\nimport  Pagination  from '../Common/Pagination/Pagination';\r\nconst URL = 'http://localhost:3000/user';\r\nconst URLClubs = 'http://localhost:3000/clubs';\r\nexport const Table = () => {\r\n    const [employees, setEmployees] = React.useState([]);\r\n    const [searchedEmployees, setSearchedEmployees] = React.useState([]);\r\n    const [clubs, setClubs] = React.useState([]);\r\n    const [showEA, setShowEA] = React.useState(false);\r\n    const [showDel, setShowDel] = React.useState(false);\r\n    const [showConfirmAdd, setShowConfirmAdd] = React.useState(false);\r\n    const [showEditedClubs,setShowEditedClubs] = React.useState();\r\n    const [title, setTitle] = React.useState(\"\");\r\n    const [type, setType] = React.useState(\"\");\r\n    const [name, setName] = React.useState(\"\");\r\n    const [idDel, setIdDel] = React.useState();\r\n    const [maxID, setMaxID] = React.useState();\r\n    const [employeeToEdit, setEmployeeToEdit] = React.useState({});\r\n    const [employeeToDelete, setEmployeeToDelete] = React.useState();\r\n    const [currentPage, setCurrentPage] = React.useState(1);\r\n    const [postsPerPage] = React.useState(6);\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPost = searchedEmployees.slice(indexOfFirstPost,indexOfLastPost);\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n     React.useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    const getData = async () => {\r\n        const response = await axios.get(URL)\r\n        setEmployees(response.data);\r\n        setSearchedEmployees(response.data)\r\n        setMaxID(response.data[response.data.length - 1].id);\r\n    }\r\n\r\n    const getClubs = async () => {\r\n\r\n        const response = await axios.get(URLClubs);\r\n        setClubs(response.data);\r\n    }\r\n    React.useEffect(() => {\r\n        getClubs();\r\n    }, [])\r\n    \r\n    const handleCloseEA = () => {\r\n        setShowEA(false);\r\n    }\r\n    const handleShowEA = (type, employee = {}) => {\r\n        setTitle(type + \" Coach\");\r\n        setShowEA(true);\r\n        if (employee) {\r\n            setEmployeeToEdit(employee);\r\n        }\r\n    }\r\n    const handleCloseConfirmAdd = () => {\r\n        setShowConfirmAdd(false);\r\n    }\r\n    const handleShowConfirmAdd = () => {\r\n        setTitle(\"Coach Added\");\r\n        setShowConfirmAdd(true);\r\n    }\r\n    const handleCloseDel = () => setShowDel(false);\r\n    const handleShowDel = (employee) => {\r\n        let nameCoachToBeDeleted = [];\r\n        let idCoachToBeDeleted = [];\r\n        if(employee instanceof Array)\r\n        {\r\n            employees.map((emp)=>{employee.forEach((idEmp)=>{if(emp.id == idEmp){nameCoachToBeDeleted.push(emp.name);idCoachToBeDeleted.push(idEmp);}})})\r\n            setName(nameCoachToBeDeleted);\r\n            setIdDel(idCoachToBeDeleted);\r\n        }\r\n        else{\r\n        setName(employee.name);\r\n        setIdDel(employee.id);\r\n        }\r\n        \r\n        setTitle(\"Delete Coach\");\r\n        setShowDel(true);\r\n    }\r\n    \r\n    const removeData = (id) => {\r\n        if(id instanceof Array)\r\n        {\r\n        id.forEach(id=>{\r\n        axios.delete(`${URL}/${id}`).then(res => {\r\n            const del = employees.filter(employee => id !== employee.id)\r\n            setEmployees(del);\r\n            setSearchedEmployees(del)\r\n        })\r\n        });   \r\n        }\r\n        else{\r\n            axios.delete(`${URL}/${id}`).then(res => {\r\n                const del = employees.filter(employee => id !== employee.id)\r\n                setEmployees(del);\r\n                setSearchedEmployees(del)\r\n            })\r\n        }\r\n        window.location.reload();\r\n    }\r\n    const createData = (firstName, lastName, email, editedClubs) => {\r\n        setShowEditedClubs(editedClubs);\r\n        var data = {\r\n            id: maxID + 1,\r\n            name: firstName + \" \" + lastName,\r\n            email: email,\r\n            password: \"parola\",\r\n            gender: \"male\",\r\n            primary_sport_id: 0,\r\n            secondary_sport_id: 0,\r\n            height: 170,\r\n            weight: 90,\r\n            age: 25,\r\n            profile_photo: \" \",\r\n            isAdmin: true,\r\n            isCoach: false,\r\n            isAthlete: false,\r\n            clubs: editedClubs\r\n        }\r\n        axios.post(`${URL}`, data).then(() => {\r\n            handleCloseEA();\r\n        })\r\n        window.location.reload();\r\n    }\r\n    const editData = (id, firstName, lastName, email, editedClubs) => {\r\n        axios.patch(`${URL}/${id}`, { name: firstName + \" \" + lastName, email: email, clubs: editedClubs }).then(() => {\r\n            handleCloseEA();\r\n            window.location.reload();\r\n        })\r\n    }\r\n    const renderHeader = () => {\r\n        let headerElement = [<input onChange={()=>selectAllCoaches('.checkbox-all')} className=\"checkbox-all\" type=\"checkbox\" ></input>, 'First & Last Name', 'Email adress', 'Owned clubs', 'Actions']\r\n\r\n        return headerElement.map((key, index) => {\r\n            return <th key={index}>{key}</th>\r\n        })\r\n    }\r\n    const search = (e) => {\r\n        const searchedWord = e.target.value;\r\n        if (!searchedWord.length > 0) {\r\n            setSearchedEmployees(employees);\r\n        } else {\r\n            let searched = searchedEmployees.filter(employee => employee.name.toLowerCase().includes(searchedWord.toLowerCase()));\r\n            setSearchedEmployees(searched);\r\n        }\r\n    }\r\n    const coachToBeDeleted = () => {\r\n        const allCoach = document.querySelectorAll('.checkbox-coach');\r\n        const btnDel1= document.getElementById('btnDel1');\r\n        let selectedCoachId = [];\r\n        allCoach.forEach(coach => {if(coach.checked){selectedCoachId.push(coach.id)}  });\r\n        if(selectedCoachId.length>=1) {\r\n            btnDel1.style.display=\"inline-flex\";\r\n        }\r\n        else\r\n        {\r\n            btnDel1.style.display=\"none\";\r\n        }\r\n        setEmployeeToDelete(selectedCoachId);\r\n    }\r\n    const selectAllCoaches = (classInputAll) =>{\r\n        const stateCheckboxAll = document.querySelector(classInputAll);\r\n        const allCoach = document.querySelectorAll('.checkbox-coach');\r\n        const btnDel1= document.getElementById('btnDel1');\r\n        let selectedCoachId = [];\r\n        if(stateCheckboxAll.checked){  \r\n            allCoach.forEach(coach => { coach.checked=true;});\r\n\r\n            btnDel1.style.display=\"inline-flex\";\r\n            allCoach.forEach(coach => {if(coach.checked){selectedCoachId.push(coach.id);}});\r\n            setEmployeeToDelete(selectedCoachId);\r\n        }\r\n        else if(stateCheckboxAll.checked==false)\r\n        {\r\n            allCoach.forEach(coach => { coach.checked=false;});\r\n            btnDel1.style.display=\"none\";\r\n            allCoach.forEach(coach => {if(coach.checked){selectedCoachId.pop(coach.id)}});\r\n            setEmployeeToDelete(selectedCoachId);\r\n        }\r\n         setEmployeeToDelete(selectedCoachId); \r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div id=\"btn-input\">\r\n                <input id=\"searchInput\" onChange={(e) => { search(e) }}></input>\r\n                <button id='btnAdd1' onClick={() => { handleShowEA(\"Add\"); setType(\"add\"); }}>Add new</button>\r\n                <button id='btnDel1' display=\"none\"  className=\"btn-danger\" onClick={() => {handleShowDel(employeeToDelete);}}>Delete</button>\r\n            </div>\r\n            <table id=\"coaches\">\r\n                <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    {currentPost && currentPost.map((employee) => {\r\n                        if(employee.isAdmin===false)\r\n                        return (\r\n\r\n                            <tr key={employee.id}>\r\n                                <td className='selected'>\r\n                                    <input onChange={coachToBeDeleted} id={employee.id} className=\"checkbox-coach\" type=\"checkbox\" ></input>\r\n                                {/* <p>{employee.id}</p> */}\r\n                                </td>\r\n                                <td>{employee.name}</td>\r\n                                <td>{employee.email}</td>\r\n                                <td>{employee.clubs +\", \"}</td>\r\n                                <td className='actions'>\r\n                                    <button id=\"btnEdit\" onClick={() => { handleShowEA(\"Edit\", employee); setType(\"edit\"); }}><div id=\"edit-icon\"></div></button>\r\n                                    <button id=\"btnDelete\" onClick={() => { handleCloseEA(); handleShowDel(employee) }}><div id=\"delete-icon\"></div></button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <Pagination \r\n            postsPerPage={postsPerPage} \r\n            totalPosts={searchedEmployees.length} \r\n            paginate={paginate}\r\n            />\r\n            <Modal show={showEA} onHide={handleCloseEA} animation={false}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"lblTitle\">{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <FormCreateEdit employee={employeeToEdit} clubs={clubs} formType={type} handleCloseEA={handleCloseEA} handleShowDel={handleShowDel} handleShowConfirmAdd={handleShowConfirmAdd} editData={editData} createData={createData} />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* --------------------DELETE MODAL----------------------- */}\r\n            <Modal show={showDel} onHide={handleCloseDel} animation={false}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"lblTitle\">{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <FormDelete name={name} />\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button id=\"btnCancel\" variant=\"secondary\" onClick={handleCloseDel}>\r\n                        CANCEL\r\n                    </Button>\r\n                    <Button id=\"btnAdd\" variant=\"primary\" onClick={() => { removeData(idDel); handleCloseDel(); }}>\r\n                        DELETE\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* --------------------CONFIRM ADD MODAL----------------------- */}\r\n            <Modal show={showConfirmAdd} onHide={handleCloseConfirmAdd} animation={false}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"lblTitle\">{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <FormConfirmAdd name={name} clubs={showEditedClubs}/>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button id=\"btnAdd\" variant=\"secondary\" onClick={handleCloseConfirmAdd}>\r\n                        CLOSE\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Common\\OpenForm\\FormCreateEdit.js",["105","106","107","108","109"],"import React from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport './FormCreateEdit.css';\r\nconst URL = 'http://localhost:3000/clubs';\r\nexport const FormCreateEdit = ({ employee, formType, handleCloseEA, handleShowDel, handleShowConfirmAdd, editData, createData, clubs }) => {\r\n    console.log(employee)\r\n    let firstName = formType.toLowerCase() === 'edit' ? employee.name.split(' ')[0] : '';\r\n    let lastName = formType.toLowerCase() === 'edit' && employee.name.split(' ')[1] ? employee.name.split(' ')[1] : '';\r\n    \r\n    let { email } = employee;\r\n    const [editedClubs,setEditedClubs] = React.useState([]);\r\n    const [fName,setFName]=React.useState(\"\");\r\n    const [lName,setLName]=React.useState(\"\");\r\n    const [_email,setEmail]=React.useState(\"\");\r\n    \r\n    const editClubs = () => {\r\n        const allClubs = Array.from(document.querySelector('.custom-select').options);\r\n       \r\n        const selectedClubs = allClubs.filter(club => club.selected);\r\n        let selectedClubsNames = [];\r\n        selectedClubs.forEach(club => {\r\n            selectedClubsNames.push(club.value);\r\n        });\r\n        setEditedClubs(selectedClubsNames);\r\n        console.log(selectedClubsNames);\r\n        // console.log(allClubs.length+\"--\");\r\n        // if(allClubs)\r\n        // setEditedClubs(employee.clubs);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form>\r\n                <Form.Group >\r\n                    <Form.Label id=\"lblCreateEdit\">First Name</Form.Label>\r\n                    <Form.Control defaultValue={firstName} onKeyUp={(e) => { setFName(e.target.value);firstName = e.target.value;console.log(e.target.value); }} type=\"text\" placeholder=\"Enter first name\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                    <Form.Label id=\"lblCreateEdit\">Last Name</Form.Label>\r\n                    <Form.Control defaultValue={lastName} onKeyUp={(e) => { setLName(e.target.value);lastName = e.target.value }} type=\"text\" placeholder=\"Enter last name\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                    <Form.Label id=\"lblCreateEdit\">Email Adress</Form.Label>\r\n                    <Form.Control defaultValue={email} onKeyUp={(e) => { setEmail(e.target.value);email = e.target.value }} type=\"text\" placeholder=\"Enter email adress\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                    <Form.Label id=\"lblCreateEdit\">Club Assign</Form.Label>\r\n                    <div>\r\n                        <select onChange={(e) => {\r\n                            editClubs();\r\n                        }} name='clubs' className=\"browser-default custom-select\" multiple>\r\n                            {\r\n                                clubs.map((club, index) => {return (<option key={index} value={club.name}>{club.name}</option>) })\r\n                            \r\n                            }\r\n                        </select>\r\n                    </div>\r\n                </Form.Group>\r\n                {formType.toLowerCase() === 'edit' ? <Button id=\"btnCancel\" variant=\"secondary\" onClick={() => { handleCloseEA(); handleShowDel(employee); }}>DELETE</Button> : null}\r\n                <Button id=\"btnCancel\" variant=\"secondary\" onClick={handleCloseEA}>CANCEL</Button>\r\n                <Button id=\"btnAdd\" variant=\"primary\" onClick={() => {\r\n                    //handleShowConfirmAdd();\r\n                    console.log(firstName+\"-\"+lastName+\"-\"+email+\"-\"+editedClubs);\r\n                    formType.toLowerCase() === 'edit' ? editData(employee.id, fName.length==0?firstName:fName, lName.length==0?lastName:lName, _email.length==0?email:_email, editedClubs.length==0?employee.clubs:editedClubs) : createData(fName, lName, _email, editedClubs)\r\n                }}>{formType.toLowerCase() === 'add' ? 'ADD' : 'EDIT'}</Button>\r\n\r\n            </Form>\r\n\r\n        </>\r\n    );\r\n}\r\n","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Common\\OpenForm\\FormDelete.js",[],"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Common\\Pagination\\Pagination.js",["110","111"],"import { paginationReducer } from '@material-ui/data-grid';\r\nimport React from 'react';\r\n//import './Pagination.css';\r\n\r\nexport const Pagination = ({postsPerPage, totalPosts, paginate}) => {\r\n  const pageNumbers = [];\r\n\r\n  for(let i = 1; i <= Math.ceil(totalPosts / postsPerPage);i++){\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <nav>\r\n      <ul className='pagination pagination-lg'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n              <a onClick={() => paginate(number)}  className='page-link'>\r\n                {number}\r\n              </a>\r\n          </li>\r\n        ))}\r\n      </ul>      \r\n    </nav>\r\n  )\r\n}\r\nexport default Pagination;\r\n","F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Common\\OpenForm\\FormConfirmAdd.js",[],"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Events\\EventElements.js",[],"F:\\INTERNSHIP_ASSIST\\New folder\\my-app\\src\\Components\\Common\\Pagination\\tst.js",["112","113"],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":18,"column":57,"nodeType":"120","messageId":"121","endLine":18,"endColumn":59},{"ruleId":"122","severity":1,"message":"123","line":11,"column":10,"nodeType":"124","messageId":"125","endLine":11,"endColumn":21},{"ruleId":"122","severity":1,"message":"126","line":14,"column":10,"nodeType":"124","messageId":"125","endLine":14,"endColumn":14},{"ruleId":"122","severity":1,"message":"127","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":13},{"ruleId":"122","severity":1,"message":"128","line":4,"column":15,"nodeType":"124","messageId":"125","endLine":4,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":9,"column":57,"nodeType":"120","messageId":"121","endLine":9,"endColumn":59},{"ruleId":"118","severity":1,"message":"119","line":58,"column":59,"nodeType":"120","messageId":"121","endLine":58,"endColumn":61},{"ruleId":"129","severity":1,"message":"130","line":77,"column":32,"nodeType":"131","messageId":"132","endLine":77,"endColumn":34},{"ruleId":"118","severity":1,"message":"119","line":77,"column":72,"nodeType":"120","messageId":"121","endLine":77,"endColumn":74},{"ruleId":"118","severity":1,"message":"119","line":182,"column":41,"nodeType":"120","messageId":"121","endLine":182,"endColumn":43},{"ruleId":"129","severity":1,"message":"133","line":203,"column":64,"nodeType":"131","messageId":"134","endLine":203,"endColumn":66},{"ruleId":"122","severity":1,"message":"135","line":4,"column":7,"nodeType":"124","messageId":"125","endLine":4,"endColumn":10},{"ruleId":"118","severity":1,"message":"119","line":67,"column":91,"nodeType":"120","messageId":"121","endLine":67,"endColumn":93},{"ruleId":"118","severity":1,"message":"119","line":67,"column":124,"nodeType":"120","messageId":"121","endLine":67,"endColumn":126},{"ruleId":"118","severity":1,"message":"119","line":67,"column":157,"nodeType":"120","messageId":"121","endLine":67,"endColumn":159},{"ruleId":"118","severity":1,"message":"119","line":67,"column":193,"nodeType":"120","messageId":"121","endLine":67,"endColumn":195},{"ruleId":"122","severity":1,"message":"136","line":1,"column":10,"nodeType":"124","messageId":"125","endLine":1,"endColumn":27},{"ruleId":"137","severity":1,"message":"138","line":16,"column":15,"nodeType":"139","endLine":16,"endColumn":74},{"ruleId":"122","severity":1,"message":"140","line":1,"column":13,"nodeType":"124","messageId":"125","endLine":1,"endColumn":18},{"ruleId":"141","severity":1,"message":"142","line":20,"column":7,"nodeType":"143","messageId":"144","endLine":26,"endColumn":8},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'eventToEdit' is assigned a value but never used.","Identifier","unusedVar","'type' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'URL' is assigned a value but never used.","'paginationReducer' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'rearg' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]